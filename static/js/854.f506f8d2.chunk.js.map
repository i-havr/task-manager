{"version":3,"file":"static/js/854.f506f8d2.chunk.js","mappings":"2OAEaA,EAAaC,EAAAA,GAAAA,IAAH,qJASVC,EAAaD,EAAAA,GAAAA,EAAH,+DAKVE,EAAeF,EAAAA,GAAAA,OAAH,yV,UCZZG,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACnBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,UAACR,EAAD,YACE,SAACE,EAAD,UAAaI,KACb,SAACH,EAAD,CAAcM,KAAK,SAASC,QALX,kBAAMH,GAASI,EAAAA,EAAAA,IAAWN,GAA1B,EAKjB,sBAKL,EChBYO,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAhB,EAIrBC,EAAiB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,KAAhB,ECFtBC,EAAiBjB,EAAAA,GAAAA,GAAH,8ICGdkB,EAAW,WACtB,IAAML,GAAQM,EAAAA,EAAAA,IAAYJ,GAE1B,OACE,SAACE,EAAD,UACGJ,EAAMO,KAAI,gBAAGhB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACT,yBACE,SAACF,EAAD,CAAMC,GAAIA,EAAIC,KAAMA,KADbD,EADA,KAOhB,ECfYiB,EAAarB,EAAAA,GAAAA,KAAH,+FAOVsB,EAActB,EAAAA,GAAAA,MAAH,iNAWXE,EAAeF,EAAAA,GAAAA,OAAH,gUChBZuB,EAAa,WACxB,IAAMjB,GAAWC,EAAAA,EAAAA,MAcjB,OACE,UAACc,EAAD,CAAYG,SAbO,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTvB,EAAOsB,EAAKE,SAASxB,KAAKyB,MAChC,GAAa,KAATzB,EAGF,OAFAC,GAASyB,EAAAA,EAAAA,IAAQ1B,SACjBsB,EAAKK,QAGPC,MAAM,yCACP,EAGC,WACE,SAACX,EAAD,CAAaY,KAAK,UAClB,SAAC,EAAD,yBAGL,ECjBc,SAASC,IACtB,IAAM7B,GAAWC,EAAAA,EAAAA,MACX6B,GAAYjB,EAAAA,EAAAA,IAAYR,GAM9B,OAJA0B,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,MACV,GAAE,CAAChC,KAGF,UAAC,KAAD,YACE,SAAC,KAAD,WACE,6CAEF,SAACiB,EAAD,KACA,yBAAMa,GAAa,4BACnB,SAAClB,EAAD,MAGL,C","sources":["components/Task/Task.styled.jsx","components/Task/Task.jsx","redux/tasks/tasks-selectors.js","components/TaskList/TaskList.styled.jsx","components/TaskList/TaskList.jsx","components/TaskEditor/TaskEditor.styled.jsx","components/TaskEditor/TaskEditor.jsx","pages/Tasks/Tasks.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TaskStyled = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 4px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n`;\n\nexport const TextStyled = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nexport const ButtonStyled = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n  margin-left: auto;\n  border-radius: 4px;\n  padding: 8px 12px;\n  background-color: #3f51b5;\n  color: #fff;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n\n  &:active {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteTask } from 'redux/tasks/tasks-operations';\nimport { TaskStyled, TextStyled, ButtonStyled } from './Task.styled';\n\nexport const Task = ({ id, text }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteTask(id));\n\n  return (\n    <TaskStyled>\n      <TextStyled>{text}</TextStyled>\n      <ButtonStyled type=\"button\" onClick={handleDelete}>\n        Delete\n      </ButtonStyled>\n    </TaskStyled>\n  );\n};\n","export const selectLoading = state => state.tasks.loading;\n\nexport const selectFilter = state => state.tasks.filter;\n\nexport const selectAllTasks = state => state.tasks.items;\n","import styled from 'styled-components';\n\nexport const TaskListStyled = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n`;\n","import { useSelector } from 'react-redux';\nimport { Task } from 'components/Task/Task';\nimport { selectAllTasks } from 'redux/tasks/tasks-selectors';\nimport { TaskListStyled } from './TaskList.styled';\n\nexport const TaskList = () => {\n  const tasks = useSelector(selectAllTasks);\n\n  return (\n    <TaskListStyled>\n      {tasks.map(({ id, text }) => (\n        <li key={id}>\n          <Task id={id} text={text} />\n        </li>\n      ))}\n    </TaskListStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  width: 100%;\n  gap: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const InputStyled = styled.input`\n  flex-grow: 1;\n  padding: 8px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n  resize: none;\n`;\n\nexport const ButtonStyled = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n  padding: 0 8px;\n  border-radius: 4px;\n  background-color: #3f51b5;\n  color: #fff;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n\n  &:active {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { addTask } from 'redux/tasks/tasks-operations';\nimport { FormStyled, InputStyled, ButtonStyled } from './TaskEditor.styled';\n\nexport const TaskEditor = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const text = form.elements.text.value;\n    if (text !== '') {\n      dispatch(addTask(text));\n      form.reset();\n      return;\n    }\n    alert('Task cannot be empty. Enter some text!');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <InputStyled name=\"text\" />\n      <ButtonStyled>Add task</ButtonStyled>\n    </FormStyled>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { TaskList } from '../../components/TaskList/TaskList';\nimport { TaskEditor } from '../../components/TaskEditor/TaskEditor';\nimport { fetchTasks } from 'redux/tasks/tasks-operations';\nimport { selectLoading } from '../../redux/tasks/tasks-selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList />\n    </HelmetProvider>\n  );\n}\n"],"names":["TaskStyled","styled","TextStyled","ButtonStyled","Task","id","text","dispatch","useDispatch","type","onClick","deleteTask","selectLoading","state","tasks","loading","selectAllTasks","items","TaskListStyled","TaskList","useSelector","map","FormStyled","InputStyled","TaskEditor","onSubmit","e","preventDefault","form","currentTarget","elements","value","addTask","reset","alert","name","Tasks","isLoading","useEffect","fetchTasks"],"sourceRoot":""}